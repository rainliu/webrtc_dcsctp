cc_library(
    name = "strong_alias",
    srcs = [],
    hdrs = ["strong_alias.h"],
    deps = [],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "type_traits",
    srcs = [],
    hdrs = ["type_traits.h"],
    deps = [],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "safe_compare",
    srcs = [],
    hdrs = ["numerics/safe_compare.h"],
    deps = [":type_traits"],
)

cc_library(
    name = "checks",
    srcs = ["checks.cc"],
    hdrs = ["checks.h"],
    deps = [
        ":safe_compare",
        "//api:scoped_refptr",
        "//rtc_base/system:inline",
        "//rtc_base/system:rtc_export",
        "@com_google_absl//absl/meta:type_traits",
        "@com_google_absl//absl/strings",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "stringutils",
    srcs = [
        "string_encode.cc",
        "string_to_number.cc",
        "string_utils.cc",
        "strings/string_builder.cc",
        "strings/string_format.cc",
    ],
    hdrs = [
        "string_encode.h",
        "string_to_number.h",
        "string_utils.h",
        "strings/string_builder.h",
        "strings/string_format.h",
    ],
    deps = [
        ":checks",
        ":macromagic",
        ":safe_minmax",
        "//api:array_view",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "macromagic",
    srcs = [],
    hdrs = [
        "arraysize.h",
        "thread_annotations.h",
    ],
    deps = ["//rtc_base/system:arch"],
)

cc_library(
    name = "safe_minmax",
    srcs = [],
    hdrs = ["numerics/safe_minmax.h"],
    deps = [
        ":checks",
        ":safe_compare",
        ":type_traits",
    ],
)

##################################################
# unit tests
##################################################
#cc_library(
#    name = "gunit_helpers",
#    srcs = [
#        "gunit.cc",
#        "gunit.h",
#    ],
#    hdrs = [],
#    deps = [
#        ":logging",
#        ":rtc_base",
#        ":rtc_base_tests_utils",
#        ":stringutils",
#        ":threading",
#        "//test:test_support",
#        "@com_google_absl//absl/strings"
#    ],
#)